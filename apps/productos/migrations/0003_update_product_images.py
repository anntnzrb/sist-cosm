# Generated by Django 5.2.2 on 2025-06-17 19:15

from django.db import migrations


def update_product_images(apps, schema_editor):
    Producto = apps.get_model("productos", "Producto")

    # Mapping of product names to image paths
    images_mapping = {
        "Labial Matte Rojo Clásico": "productos/samples/lipstick.jpg",
        "Base de Maquillaje Full Coverage": "productos/samples/foundation.jpg",
        "Sérum Vitamina C Anti-Edad": "productos/samples/serum-vitaminc.jpg",
        "Paleta de Sombras Neutras": "productos/samples/eyeshadow-palette.jpg",
        "Crema Hidratante Facial Noche": "productos/samples/cream-jar.jpg",
        "Máscara de Pestañas Volumen": "productos/samples/mascara.jpg",
        "Perfume Floral Elegante 50ml": "productos/samples/perfume.jpg",
        "Exfoliante Facial Suave": "productos/samples/face-scrub.jpg",
        "Delineador Líquido Negro": "productos/samples/eyeliner.jpg",
        "Protector Solar Facial SPF 50": "productos/samples/sunscreen.jpg",
    }

    # Update each product with its corresponding image
    for nombre, imagen_path in images_mapping.items():
        try:
            producto = Producto.objects.get(nombre=nombre)
            producto.imagen = imagen_path
            producto.save()
        except Producto.DoesNotExist:
            pass  # Product doesn't exist, skip


def remove_product_images(apps, schema_editor):
    Producto = apps.get_model("productos", "Producto")

    product_names = [
        "Labial Matte Rojo Clásico",
        "Base de Maquillaje Full Coverage",
        "Sérum Vitamina C Anti-Edad",
        "Paleta de Sombras Neutras",
        "Crema Hidratante Facial Noche",
        "Máscara de Pestañas Volumen",
        "Perfume Floral Elegante 50ml",
        "Exfoliante Facial Suave",
        "Delineador Líquido Negro",
        "Protector Solar Facial SPF 50",
    ]

    # Remove images from products
    for nombre in product_names:
        try:
            producto = Producto.objects.get(nombre=nombre)
            producto.imagen = None
            producto.save()
        except Producto.DoesNotExist:
            pass


class Migration(migrations.Migration):
    dependencies = [
        ("productos", "0002_add_sample_products"),
    ]

    operations = [
        migrations.RunPython(update_product_images, remove_product_images),
    ]
